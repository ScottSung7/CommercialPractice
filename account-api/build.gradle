plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.protobuf' version '0.9.4'
    id 'jacoco'
}

group = 'com.example'


java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}
//bootJar
tasks.getByName('bootJar'){
    enabled = true
}
//cloud
dependencyManagement {

    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
    }

}
//protobuf
//protobuf {
//    protoc {
//        artifact = "com.google.protobuf:protoc:3.25.1"
//    }
//    plugins {
//        grpc {
//            artifact = 'io.grpc:protoc-gen-grpc-java:1.62.2'
//        }
//    }
//    generateProtoTasks {
//        all()*.plugins {
//            grpc {}
//        }
//    }
//}
sourceSets {
    main{
        java{
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
//jacoco
jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
}
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

dependencies {

    //basic(common - web)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //DB
    runtimeOnly 'mysql:mysql-connector-java:8.0.21'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.data:spring-data-envers'

    //Lombok - annotation
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //spring security & JWT
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation group: 'org.springframework.security', name: 'spring-security-messaging', version: '5.6.2'
    implementation 'io.jsonwebtoken:jjwt:0.12.3'
    //implementation 'com.auth0:java-jwt:4.4.0'

    //mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //Front
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //random string
    //implementation 'org.apache.commons:commons-lang3:3.12.0'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
//    implementation 'org.springdoc:springdoc-openapi-webflux-core:1.5.13'
//    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.13'

    //spring cloud - Cloud Dependency Management needed
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-gateway-mvc'

//    //grpcenv-account-api.properties
//    implementation project(':protoProject')
//    implementation 'net.devh:grpc-server-spring-boot-starter:3.0.0.RELEASE'
//    implementation 'net.devh:grpc-client-spring-boot-starter:3.0.0.RELEASE'
//    implementation 'io.grpc:grpc-all:1.62.2'

    //metrics
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    //aws-parameter store
    dependencies {
        implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.1.0")
        implementation 'io.awspring.cloud:spring-cloud-aws-starter-parameter-store'
    }
    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.projectlombok:lombok:1.18.26'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.assertj:assertj-core:3.23.1'

    testRuntimeOnly 'com.h2database:h2'




}

tasks.named('test') {
    useJUnitPlatform()
}
